
from fairgraph.openminds.computation import Environment
import pytest

from test.utils import generate_random_object
#from jsondiff import diff as jsondiff


class MockKGClient:
    _private_space = "myspace_1234"
    pass


@pytest.fixture
def client():
    return MockKGClient()


class TestEnvironment:

    def test_generate_query(self, client):
        generated = Environment.generate_query("simple", "myspace", client)
        expected = {
            '@context': {'@vocab': 'https://core.kg.ebrains.eu/vocab/query/',
                         'query': 'https://schema.hbp.eu/myQuery/',
                         'propertyName': {'@id': 'propertyName', '@type': '@id'},
                         'merge': {'@type': '@id', '@id': 'merge'},
                         'path': {'@id': 'path', '@type': '@id'}},
            'meta': {'type': 'https://openminds.ebrains.eu/computation/Environment',
                             'name': 'fg-Environment-simple-myspace',
                             'description': 'Automatically generated by fairgraph'},
            'structure': [{'path': '@id', 'filter': {'op': 'equals', 'parameter': 'id'}},
                          {'path': 'https://core.kg.ebrains.eu/vocab/meta/space',
                                   'filter': {'op': 'EQUALS',
                                              'value': client._private_space},
                                   'propertyName': 'query:space'},
                          {'path': '@type'},
                          {'propertyName': 'vocab:name',
                           'path': 'https://openminds.ebrains.eu/vocab/name',
                                   'sort': True,
                                   'required': True,
                                   'filter': {'op': 'CONTAINS', 'parameter': 'name'}},
                          {'propertyName': 'vocab:hardware',
                           'path': 'https://openminds.ebrains.eu/vocab/hardware',
                                   'structure': [{'path': '@id',
                                                  'filter': {'op': 'CONTAINS', 'parameter': 'hardware'}},
                                                 {'path': '@type'}]},
                          {'propertyName': 'vocab:configuration',
                           'path': 'https://openminds.ebrains.eu/vocab/configuration',
                                   'ensureOrder': True,
                                   'structure': [{'path': '@type'},
                                                 {'path': 'https://openminds.ebrains.eu/vocab/context',
                                                  'propertyName': 'vocab:context'},
                                                 {'path': 'https://openminds.ebrains.eu/vocab/relevantFor',
                                                  'propertyName': 'vocab:relevantFor'},
                                                 {'path': 'https://openminds.ebrains.eu/vocab/parameter',
                                                  'propertyName': 'vocab:parameter',
                                                  'structure': [
                                                      {'path': '@type'},
                                                      {'path': 'https://openminds.ebrains.eu/vocab/name',
                                                       'propertyName': 'vocab:name'},
                                                      {'path': 'https://openminds.ebrains.eu/vocab/value',
                                                       'propertyName': 'vocab:value'}
                                                  ]
                                                  }
                                                 ],
                                   'filter': {'op': 'CONTAINS', 'parameter': 'configuration'}},
                          {'propertyName': 'vocab:software',
                           'path': 'https://openminds.ebrains.eu/vocab/software',
                                   'ensureOrder': True,
                                   'structure': [{'path': '@id',
                                                  'filter': {'op': 'CONTAINS', 'parameter': 'software'}},
                                                 {'path': '@type'}]},
                          {'propertyName': 'vocab:description',
                           'path': 'https://openminds.ebrains.eu/vocab/description',
                                   'filter': {'op': 'CONTAINS', 'parameter': 'description'}}]}
        #assert not jsondiff(generated, expected)
        assert generated == expected
